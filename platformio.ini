; PlatformIO Project Configuration File

[common]
monitor_speed = 115200  ; 921600, 512000, 460800, 256000, 115200

build_flags =
    -D TFT_FONT=0 ; (0) GARAMOND, (1) TFT_TIMES_NEW_ROMAN, (2) TFT_FREE_SERIF_ITALIC, (3) TFT_ARIAL, (4) Z300
    -D NTP_Pool_1='"europe.pool.ntp.org"' ;note the double quotes
    -D NTP_Pool_2='"pool.ntp.org"'
    -D NTP_Pool_3='"time-a-g.nist.gov"'
    -D CORE_DEBUG_LEVEL=2                    ; 0 None, 1 Error, 2 Warn, 3 Info, 4 Debug, 5 Verbose
    -D CONFIG_ARDUHAL_LOG_COLORS=1
    -D ARDUINO_RUNNING_CORE=1                ; Arduino Runs On Core (setup, loop)
    -D ARDUINO_EVENT_RUNNING_CORE=1          ; Events Run On Core
    -D AUDIOTASK_CORE=0                      ; 0 or 1 - reads from the InBuffer, decodes and feeds I2S
    -D BOARD_HAS_PSRAM=1
    -D MONITOR_SPEED=${this.monitor_speed}
    ;-D SHA_SIZE=20
    -Wall
    -Wextra
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[esp32]
    board_build.partitions = boards/miniwebradio4MB.csv    ; 4MB Flash
    ;board_build.partitions = boards/miniwebradio8MB.csv    ; 8MB Flash
    ;board_build.partitions = boards/miniwebradio16MB.csv   ; 16MB Flash

    board = ESP32-Dev-4MB            ; 4MB Flash
    ;board = ESP32-Dev-8MB            ; 8MB Flash
    ;board = ESP32-Dev-16MB           ;16MB Flash
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[esp32s3]
    ;board_build.partitions = boards/miniwebradio4MB.csv    ;  4MB Flash
    ;board_build.partitions = boards/miniwebradio8MB.csv    ;  8MB Flash
    board_build.partitions = boards/miniwebradio16MB.csv   ; 16MB Flash
    ;board_build.partitions = boards/miniwebradio32MB.csv   ; 32MB Flash

    ;board = ESP32-S3-DevKitC-1-N4R8    ;  4 MB quad Flash, 8MB octo PSRAM
    ;board = ESP32-S3-DevKitC-1-N8R8    ;  8 MB quad Flash, 8MB octo PSRAM
    board = ESP32-S3-DevKitC-1-N16R8   ; 16 MB quad Flash, 8MB octo PSRAM
    ;board = ESP32-S3-DevKitC-1-N16R8V  ;  8 MB octo Flash, 8MB octo PSRAM
    ;board = ESP32-S3-DevKitC-1-N32R8V  ;  8 MB octo Flash, 8MB octo PSRAM
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[ota]
upload_port     = "MiniWebRadio.local"
upload_protocol = espota ;update code over WiFi, uploadPort = Auto, must have at least 8MB flash
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[env]
extra_scripts = pre:env-extra.py

;platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.07/platform-espressif32.zip   ;Arduino core 3.0.7
platform = https://github.com/pioarduino/platform-espressif32.git#cadf345 ; Arduino 3.1.1 / IDF 5.4.0

framework = arduino, espidf

build_flags     = ${common.build_flags}
monitor_speed   = ${common.monitor_speed}
monitor_filters = esp32_exception_decoder, send_on_enter, log2file
upload_speed    = 921600  ; 921600, 512000, 460800, 256000, 115200

board_build.embed_txtfiles =
    managed_components/espressif__esp_insights/server_certs/https_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_mqtt_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_claim_service_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_ota_server.crt

lib_deps =
    https://github.com/schreibfaul1/ESP32-audioI2S.git#213e0e6          ;Version 3.1.0b
    https://github.com/schreibfaul1/ESP32-KCX-BT-EMITTER.git#6181da6    ;27.12.2024
    https://github.com/schreibfaul1/ESP32-DLNA-Client.git#b9d4f52       ;20.01.2024
    https://github.com/schreibfaul1/ESP32-IR-Remote-Control.git#c371281 ;05.01.2025

;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[env:esp32]
    board = ${esp32.board}
    board_build.partitions = ${esp32.board_build.partitions}
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[env:esp32s3]
    board = ${esp32s3.board}
    board_build.partitions = ${esp32s3.board_build.partitions}
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[env:esp32_OTA]
    board = ${esp32.board}
    board_build.partitions = ${esp32.board_build.partitions}
    upload_port = ${ota.upload_port}
    upload_protocol = ${ota.upload_protocol}
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
[env:esp32s3_OTA]
    board = ${esp32s3.board}
    board_build.partitions = ${esp32s3.board_build.partitions}
    upload_port = ${ota.upload_port}
    upload_protocol = ${ota.upload_protocol}
;—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
